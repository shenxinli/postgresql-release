name: PostgreSQL Multi-Platform Release

on:
  workflow_dispatch:
    inputs:
      pg_version:
        description: "PostgreSQL Version (10, 12, 14, 16)"
        required: true
        default: "14"
        type: choice
        options:
          - "10"
          - "12"
          - "14"
          - "16"

jobs:
  tag-and-release:
    name: Create Git Tag and Release
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.settag.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Tag Name
        id: settag
        run: |
          echo "tag_name=v${{ inputs.pg_version }}" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "v${{ inputs.pg_version }}"
          git push origin "v${{ inputs.pg_version }}"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.pg_version }}
          name: "PostgreSQL ${{ inputs.pg_version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build ${{ matrix.platform }}
    needs: tag-and-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - windows/amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse platform info
        id: parse
        run: |
          IFS='/' read -r OS ARCH <<< "${{ matrix.platform }}"
          EXT="tar.gz"
          if [[ "$OS" == "windows" ]]; then
            EXT="zip"
          fi
          FILENAME="postgresql-${{ inputs.pg_version }}-${OS}-${ARCH}.${EXT}"
          echo "os=$OS" >> $GITHUB_OUTPUT
          echo "arch=$ARCH" >> $GITHUB_OUTPUT
          echo "ext=$EXT" >> $GITHUB_OUTPUT
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT

      - name: Download PostgreSQL binary
        run: |
          chmod +x ./scripts/download-postgresql.sh
          ./scripts/download-postgresql.sh "${{ inputs.pg_version }}" "${{ steps.parse.outputs.os }}" "${{ steps.parse.outputs.arch }}"

      - name: Package
        run: |
          mkdir -p output
          cd postgresql
          if [[ "${{ steps.parse.outputs.ext }}" == "zip" ]]; then
            zip -r "../output/${{ steps.parse.outputs.filename }}" .
          else
            tar -czf "../output/${{ steps.parse.outputs.filename }}" .
          fi

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.tag-and-release.outputs.tag_name }}
          files: output/${{ steps.parse.outputs.filename }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
