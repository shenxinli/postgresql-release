name: Build and Upload PostgreSQL

on:
  workflow_dispatch:
    inputs:
      version:
        description: "PostgreSQL major version"
        required: true
        type: choice
        options:
          - "10"
          - "12"
          - "14"
          - "16"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os_arch:
          - { os: linux, arch: amd64 }
          - { os: linux, arch: arm64 }
          - { os: windows, arch: amd64 }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git user (for tagging)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Generate tag and create release
        if: matrix.os_arch.os == 'linux' && matrix.os_arch.arch == 'amd64'
        run: |
          git tag -f postgresql-v${{ inputs.version }}
          git push origin postgresql-v${{ inputs.version }} --force

      - name: Download PostgreSQL Binary for Linux x86_64 (Version 10 only)
        if: matrix.os_arch.os == 'linux' && matrix.os_arch.arch == 'amd64' && inputs.version == '10'
        run: |
          chmod +x ./scripts/download-postgresql-linux.sh
          ./scripts/download-postgresql-linux.sh "${{ inputs.version }}" "amd64"
          mv postgresql-linux-amd64/postgresql-*.tar.gz postgresql-${{ inputs.version }}-linux-amd64.tar.gz

      - name: Build PostgreSQL from Source (Linux)
        if: matrix.os_arch.os == 'linux' && (inputs.version != '10')
        run: |
          chmod +x ./scripts/build-postgresql-linux.sh
          ./scripts/build-postgresql-linux.sh "${{ inputs.version }}" "${{ matrix.os_arch.arch }}"
          mv postgresql-${{ inputs.version }}-linux-${{ matrix.os_arch.arch }}.tar.gz postgresql-${{ inputs.version }}-linux-${{ matrix.os_arch.arch }}.tar.gz

      - name: Download PostgreSQL (Windows)
        if: matrix.os_arch.os == 'windows'
        shell: bash
        run: |
          chmod +x ./scripts/download-postgresql-windows.sh
          ./scripts/download-postgresql-windows.sh "${{ inputs.version }}"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: postgresql-v${{ inputs.version }}
          name: PostgreSQL ${{ inputs.version }} binaries
          files: |
            postgresql-${{ inputs.version }}-linux-amd64.tar.gz
            postgresql-${{ inputs.version }}-linux-arm64.tar.gz
            postgresql-${{ inputs.version }}-windows-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
