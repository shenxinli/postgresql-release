name: Build & Release PostgreSQL

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'PostgreSQL version (10, 12, 14, 16)'
        required: true
        default: '14'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os_arch:
          - { os: linux, arch: amd64 }
          - { os: linux, arch: arm64 }
          - { os: windows, arch: amd64 }
    name: Build PostgreSQL ${{ matrix.os_arch.os }}/${{ matrix.os_arch.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup dependencies (Linux only)
        if: matrix.os_arch.os == 'linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential libreadline-dev zlib1g-dev flex bison

      - name: Download binary (x64 only)
        if: matrix.os_arch.arch == 'amd64' && matrix.os_arch.os != 'linux' || matrix.os_arch.os == 'linux'
        run: |
          chmod +x ./scripts/download-postgresql.sh
          ./scripts/download-postgresql.sh "${{ inputs.version }}" "${{ matrix.os_arch.os }}" "${{ matrix.os_arch.arch }}"

      - name: Build from source (Linux ARM64)
        if: matrix.os_arch.os == 'linux' && matrix.os_arch.arch == 'arm64'
        run: |
          curl -LO https://ftp.postgresql.org/pub/source/v${{ inputs.version }}/postgresql-${{ inputs.version }}.tar.gz
          tar -xzf postgresql-${{ inputs.version }}.tar.gz
          cd postgresql-${{ inputs.version }}
          ./configure --prefix=$(pwd)/output
          make -j$(nproc)
          make install
          cd output
          tar -czf ../../postgresql-${{ inputs.version }}-linux-arm64.tar.gz *

      - name: Archive artifact
        run: |
          if [ -f "postgresql-${{ inputs.version }}-${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }}.tar.gz" ]; then
            echo "Found tar.gz"
          elif [ -f postgresql/package.zip ]; then
            mv postgresql/package.zip postgresql-${{ inputs.version }}-${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }}.zip
          elif [ -d postgresql ]; then
            tar -czf postgresql-${{ inputs.version }}-${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }}.tar.gz -C postgresql .
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: postgresql-${{ inputs.version }}-${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }}
          path: postgresql-${{ inputs.version }}-${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: postgresql-v${{ inputs.version }}
          name: PostgreSQL v${{ inputs.version }}
          files: |
            **/postgresql-${{ inputs.version }}-*.tar.gz
            **/postgresql-${{ inputs.version }}-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
