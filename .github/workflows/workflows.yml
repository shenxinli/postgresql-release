name: Build and Upload PostgreSQL

on:
  workflow_dispatch:
    inputs:
      version:
        description: "PostgreSQL major version"
        required: true
        type: choice
        options:
          - "10"
          - "11"
          - "12"
          - "14"
          - "16"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os_arch:
          - { os: linux, arch: amd64 }
          - { os: linux, arch: arm64 }
          - { os: windows, arch: amd64 }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git user (for tagging)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Generate tag and create release
        if: matrix.os_arch.os == 'linux' && matrix.os_arch.arch == 'amd64'
        run: |
          git tag -f postgresql-v${{ inputs.version }}
          git push origin postgresql-v${{ inputs.version }} --force

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Map version to full version
        id: map-version
        run: |
          case "${{ inputs.version }}" in
            10) echo "full_version=10.9" >> $GITHUB_OUTPUT ;;
            11) echo "full_version=11.6" >> $GITHUB_OUTPUT ;;
            12) echo "full_version=12.8" >> $GITHUB_OUTPUT ;;
            14) echo "full_version=14.8" >> $GITHUB_OUTPUT ;;
            16) echo "full_version=16.2" >> $GITHUB_OUTPUT ;;
            *) echo "Unknown version"; exit 1 ;;
          esac

      - name: Build PostgreSQL for Linux (amd64 / arm64)
        if: startsWith(matrix.os_arch.os, 'linux') && inputs.version != '10'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./scripts/Dockerfile.postgresql
          platforms: linux/${{ matrix.os_arch.arch }}
          outputs: type=local,dest=./output-${{ matrix.os_arch.arch }}
          build-args: |
            PG_VERSION=${{ steps.map-version.outputs.full_version }}

      - name: Rename Linux artifact
        if: startsWith(matrix.os_arch.os, 'linux') && inputs.version != '10'
        run: |
          tar -czf postgresql-${{ inputs.version }}-linux-${{ matrix.os_arch.arch }}.tar.gz -C output-${{ matrix.os_arch.arch }} .

      - name: Download PostgreSQL (Linux)
        if: startsWith(matrix.os_arch.os, 'linux') && inputs.version== '10'
        shell: bash
        run: |
          chmod +x./scripts/download-postgresql-linux.sh
          ./scripts/download-postgresql-linux.sh "${{ inputs.version }}" "${{ matrix.os_arch.arch }}"

      - name: Download PostgreSQL (Windows)
        if: matrix.os_arch.os == 'windows'
        shell: bash
        run: |
          chmod +x ./scripts/download-postgresql-windows.sh
          ./scripts/download-postgresql-windows.sh "${{ inputs.version }}"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: postgresql-v${{ inputs.version }}
          name: PostgreSQL ${{ inputs.version }} binaries
          files: |
            postgresql-${{ inputs.version }}-linux-amd64.tar.gz
            postgresql-${{ inputs.version }}-linux-arm64.tar.gz
            postgresql-${{ inputs.version }}-windows-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
